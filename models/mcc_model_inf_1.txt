
var all_objects = [
{ shape: "triangle", id:1, location: 1},  
{ shape: "triangle", id:2, location: 2},
{ shape: "circle", id:1, location: 2}
]

var ObjectPrior = Categorical({vs: all_objects, ps: [1,1,1] })


var labels = ["dax","wug"]

var lexicon1 = function(utterance, obj){
utterance.label == "dax" ? obj.shape == "triangle" :
utterance.label == "wug" ? obj.shape == "circle" : 
true
}

var lexicon2 = function(utterance, obj){
utterance.label == "dax" ? obj.shape == "circle" :
utterance.label == "wug" ? obj.shape == "triangle" : 
true
}

var lexiconObjects = {
"dax = triangle": {
 triangle: "dax", circle: "wug"
},
"dax = circle": {
 triangle: "wug", circle: "dax"
},
}

var lexiconObject = {
"dax = triangle": lexicon1,
"dax = circle" : lexicon2
}

var point = function(utterance, obj){
return obj.location == utterance.point
}



var utterancePrior = function(obj, lexiconName){
 var locationsWithShape = _.map(_.filter(all_objects, {shape: obj.shape}), "location")
 var point = uniformDraw(locationsWithShape)
 var label = lexiconObjects[lexiconName][obj.shape]
 return {label: label, point: point}
}

var LexiconPrior = Categorical({vs: ["dax = triangle","dax = circle" ], ps: [1, 1]})

var pragmaticListener = function(utterance){
Infer({method: "enumerate", model: function(){
var lexiconName = sample(LexiconPrior);
var obj = sample(ObjectPrior);
// display("L1 _ " + utterance.point)
var S1 = speaker(obj, lexiconName);
observe(S1, utterance)
 return {lexicon: lexiconName, obj: obj}
}})
}

var speakerOptimality = 1;

var speaker = function(obj, lexiconName){
Infer({method: "enumerate", model: function(){
var utterance = utterancePrior(obj, lexiconName);
//   display("S1 --> "+ JSON.stringify(obj)  + " _ " + lexiconName)
var L0 = literalListener(utterance);
  factor(speakerOptimality * L0.score(obj.shape))
//  factor(speakerOptimality * L0.score({shape: obj.shape, lexiconName: lexiconName} )) // teaching and reference
return utterance
}})
}

var literalListener = function(utterance){
Infer({method: "enumerate", model: function(){
var lexiconName = sample(LexiconPrior); // this means literal listener doesnt know word meanings

var lexicon = lexiconObject[lexiconName];
// display("L0 --> " + JSON.stringify(utterance)  + " _ " + lexiconName)
var obj = sample(ObjectPrior);
if ("label" in utterance) {
  var truthValue = lexicon(utterance, obj);
  condition(truthValue)
}
if (utterance.point) {
  var truthValuePoint = point(utterance, obj);
  condition(truthValuePoint)
}
 return obj.shape 
// return {shape: obj.shape, lexiconName: lexiconName} // teaching and reference
}})
}

// map(function(obj){
//  display(JSON.stringify(obj))
// viz.table(speaker(obj, "dax = circle"))
//           }, all_objects)
viz.table(literalListener({label:"dax", point: 2 }))

//viz.table(speaker({ shape: "triangle", id: 2, location: 2}, "dax = circle"))

 viz.table(pragmaticListener({label: "dax", point: 2 }))
// findings, when literal listener doesnt know lexicon. pragamtic listener infers correct referent and lexicon, potentiallz by putting all the informativity inference on the point (because label has no meaning to L0)
// this result holds whether or not speaker is trzing to teach the lexicon
// next step, invetigate what happens when literal listener is assumed to know lexicon