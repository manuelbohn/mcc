library(jsonlite)
library(readxl)
files <- dir("~/Work/MCC/git-mcc/kids_pref_data_2/")
raw_data <- data_frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_pref_data_2/",f,sep="")
jd <- jsonlite::fromJSON(paste(readLines(jf), collapse=""))
date <- str_sub(jf,45,str_length(jf)-11)
id <- as_data_frame(jd$data$data) %>% mutate(test_date = date)
raw_data <- bind_rows(raw_data, id)
}
length(unique(raw_data$subid))
d_raw <-raw_data %>%
mutate(test_date = as.Date(test_date),
experiment = "mcc_kids_pref_2")
log <- read_excel("../../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "pref2")%>%
select(subid,experimenter,keep_drop,sex,dob)
length(unique(log$subid))
sum(log$keep_drop=="drop")
d <- left_join(d_raw,log, by = "subid")%>%
filter(keep_drop == "keep")%>%
mutate(dob = as.numeric(dob),
dob = as.Date(dob,origin = "1899-12-30"),
age_num = lubridate::time_length(difftime(test_date,dob), "years"),
check_age = ifelse(substr(age_num,1,1) == subage, T, F))
length(unique(d$subid))
d %>%
group_by(subage)%>%
summarise(n = length(unique(subid)))%>%
knitr::kable(digits = 2)
p1 <- d %>%
filter(trial != "train") %>%
group_by(speakerChange,subage, subid) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = speakerChange, y = correct, col = speakerChange, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = speakerChange, y = mean, col = speakerChange, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_wrap(~subage)+
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
d <- read_csv(file="../data/kids_pref_data.csv")
p1 <- d %>%
filter(trial_type == "test") %>%
group_by(change,age, subid) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = change, y = correct, col = change, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = change, y = mean, col = change, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_wrap(~age)+
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
knitr::opts_chunk$set(echo = FALSE)
###
library(tidyverse)
library(knitr)
library(langcog)
library(ggthemes)
library(jsonlite)
library(readxl)
## importing data
files <- dir("~/Work/MCC/git-mcc/kids_pref_data_2/")
raw_data <- data_frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_pref_data_2/",f,sep="")
jd <- jsonlite::fromJSON(paste(readLines(jf), collapse=""))
date <- str_sub(jf,45,str_length(jf)-11)
id <- as_data_frame(jd$data$data) %>% mutate(test_date = date)
raw_data <- bind_rows(raw_data, id)
}
length(unique(raw_data$subid))
d_raw <-raw_data %>%
mutate(test_date = as.Date(test_date),
experiment = "mcc_kids_pref_2")
log <- read_excel("../../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "pref2")%>%
select(subid,experimenter,keep_drop,sex,dob)
length(unique(log$subid))
sum(log$keep_drop=="drop")
d <- left_join(d_raw,log, by = "subid")%>%
filter(keep_drop == "keep")%>%
mutate(dob = as.numeric(dob),
dob = as.Date(dob,origin = "1899-12-30"),
age_num = lubridate::time_length(difftime(test_date,dob), "years"),
check_age = ifelse(substr(age_num,1,1) == subage, T, F))
length(unique(d$subid))
p5 <- d %>%
filter(trial_type == "test") %>%
group_by(change,age_num, subid) %>%
summarise(correct = mean(correct))
p5 <- d %>%
filter(trial != "train") %>%
group_by(change,age_num, subid) %>%
summarise(correct = mean(correct))
p5 <- d %>%
filter(trial != "train") %>%
group_by(speakerChange,age_num, subid) %>%
summarise(correct = mean(correct))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "loess", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
ggplot(data = p5, aes(x = age_num, y = correct, col = speakerChange)) +
geom_smooth(method = "loess", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p5 <- d %>%
filter(trial != "train") %>%
group_by(speakerChange,age_num, subid) %>%
summarise(correct = mean(correct))
ggplot(data = p5, aes(x = age_num, y = correct, col = speakerChange)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
files <- dir("~/Work/MCC/git-mcc/kids_info_data_2/")
raw_data <- data_frame()
###
library(tidyverse)
library(knitr)
library(langcog)
library(ggthemes)
library(jsonlite)
library(readxl)
## importing data
files <- dir("~/Work/MCC/git-mcc/kids_info_data_2/")
raw_data <- data_frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_info_data_2/",f,sep="")
jd <- jsonlite::fromJSON(paste(readLines(jf), collapse=""))
date <- str_sub(jf,47,str_length(jf)-11)
id <- as_data_frame(jd$data$data) %>% mutate(test_date = date)
raw_data <- bind_rows(raw_data, id)
}
length(unique(raw_data$subid))
d_raw <-raw_data %>%
mutate(test_date = as.Date(test_date),
experiment = "mcc_kids_inf_2_2",
subid= ifelse(subid=="193101_1_inf2","190131_1_inf2",subid))
log <- read_excel("../../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "inf2")%>%
select(subid,experimenter,keep_drop,sex,dob)
length(unique(log$subid))
sum(log$keep_drop=="drop")
d <- left_join(d_raw,log, by = "subid")%>%
filter(keep_drop == "keep")%>%
mutate(dob = as.numeric(dob),
dob = as.Date(dob,origin = "1899-12-30"),
age_num = lubridate::time_length(difftime(test_date,dob), "years"),
check_age = ifelse(substr(age_num,1,1) == subage, T, F))
length(unique(d$subid))
#write_csv(d, "../data/kids_inf_2_data.csv")
d %>%
group_by(subage)%>%
summarise(n = length(unique(subid)))%>%
knitr::kable(digits = 2)
pf1 <- d %>%
filter(trial == "filler1" | trial == "filler2")%>%
group_by(control,subage, subid) %>%
summarise(correct = mean(correct))
pf2 <- pf1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = pf1, aes(x = control, y = correct, col = subage, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = pf2, aes(x = control, y = mean, col = subage, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_wrap(~subage)+
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Control",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p1 <- d %>%
filter(trial != "filler1",
trial != "filler2")%>%
group_by(control,subage, subid) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = subage, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = subage, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_wrap(~subage)+
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Control",
breaks=c("false", "true"),
labels=c("No", "Yes"))
files <- dir("~/Work/MCC/git-mcc/kids_info_data/")
raw_data <- data_frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_info_data/",f,sep="")
jd <- jsonlite::fromJSON(paste(readLines(jf), collapse=""))
date <- str_sub(jf,45,str_length(jf)-11)
id <- as_data_frame(jd$data$data) %>% mutate(test_date = date)
raw_data <- bind_rows(raw_data, id)
}
d_raw <-raw_data %>%
mutate(test_date= ifelse(test_date == "18-10-10", paste(20,test_date,sep = ""),test_date),
subid= ifelse(subid == "101018_8_inf", "181010_8_inf",subid),
subid= ifelse(subid == "181031_3", "181031_3_inf",subid),
test_date= ifelse(test_date == "18-XX-XX", "2018-10-10",test_date),
test_date= ifelse(test_date == "18-09-12", "2018-09-12",test_date),
experiment = "mcc_kids_inf_2")
log <- read_excel("../../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "inf")%>%
select(subid,experimenter,keep_drop,sex,dob)
d2 <- left_join(d_raw,log, by = "subid")%>%
filter(keep_drop == "keep")%>%
mutate(dob = as.numeric(dob),
dob = as.Date(dob,origin = "1899-12-30"),
age_num = lubridate::time_length(difftime(test_date,dob), "years"),
check_age = ifelse(substr(age_num,1,1) == subage, T, F))
d_sum <- bind_rows(d%>%select(-test_date),d2%>%select(-test_date)%>%filter(subage!="2"))%>%
filter(trial != "filler1",
trial != "filler2")
d_sum %>%
group_by(subage)%>%
summarise(n = length(unique(subid)))%>%
knitr::kable(digits = 2)
p_sum1 <- d_sum %>%
filter(trial != "filler1",
trial != "filler2")%>%
group_by(control,subage, subid) %>%
summarise(correct = mean(correct))
p_sum2 <- p_sum1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p_sum1, aes(x = control, y = correct, col = subage, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p_sum2, aes(x = control, y = mean, col = subage, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_wrap(~subage)+
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Control",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p_sum3 <- d_sum %>%
filter(trial != "filler1",
trial != "filler2") %>%
group_by(age_num, subid) %>%
summarise(correct = mean(correct))
ggplot(data = p_sum3, aes(x = age_num, y = correct)) +
geom_smooth(method = "lm", se = T)+
geom_point( alpha = .5, width = 0.02)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
## model
library(lme4)
lm_data_sum <- d_sum%>%
mutate(age_num = scale(age_num, center = TRUE, scale = TRUE))
# maximal converging model
lm_sum <- glmer(correct ~ age_num + (1 | subid),
data = lm_data_sum, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm_sum)
###
library(tidyverse)
library(knitr)
library(langcog)
library(ggthemes)
library(jsonlite)
library(readxl)
## importing data
files <- dir("~/Work/MCC/git-mcc/kids_info_data_2/")
raw_data <- data_frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_info_data_2/",f,sep="")
jd <- jsonlite::fromJSON(paste(readLines(jf), collapse=""))
date <- str_sub(jf,47,str_length(jf)-11)
id <- as_data_frame(jd$data$data) %>% mutate(test_date = date)
raw_data <- bind_rows(raw_data, id)
}
length(unique(raw_data$subid))
d_raw <-raw_data %>%
mutate(test_date = as.Date(test_date),
experiment = "mcc_kids_inf_2_2",
subid= ifelse(subid=="193101_1_inf2","190131_1_inf2",subid))
log <- read_excel("../../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "inf2")%>%
select(subid,experimenter,keep_drop,sex,dob)
length(unique(log$subid))
sum(log$keep_drop=="drop")
d <- left_join(d_raw,log, by = "subid")%>%
filter(keep_drop == "keep")%>%
mutate(dob = as.numeric(dob),
dob = as.Date(dob,origin = "1899-12-30"),
age_num = lubridate::time_length(difftime(test_date,dob), "years"),
check_age = ifelse(substr(age_num,1,1) == subage, T, F))
length(unique(d$subid))
#write_csv(d, "../data/kids_inf_2_data.csv")
write_csv(d, "../data/kids_inf_2_data.csv")
library(tidyverse)
library(knitr)
library(ggthemes)
library(ggpubr)
library(langcog)
library(rwebppl)
library(coda)
library(reshape2)
estimate_mode <- function(s) {
d <- density(s)
return(d$x[which.max(d$y)])
}
hdi_upper<- function(s){
m <- HPDinterval(mcmc(s))
return(m["var1","upper"])
}
hdi_lower<- function(s){
m <- HPDinterval(mcmc(s))
return(m["var1","lower"])
}
pref_data <- read_csv(file="../data/kids_pref_data.csv")%>%
filter(age != "2",
trial_type != "train")%>%
mutate(age_bin = factor(age),
experiment = "preference_pretest",
condition = ifelse(change == F | change == "false", "same_speaker", "different_speaker"),
agent = ifelse( change == F | change == "false", agent, altAgent),
minage = min(age_num))%>%
select(experiment,subid,age_bin,age_num,trial,condition,agent,correct,minage)
inf_data <- bind_rows(
read_csv(file="../data/kids_inf_data.csv"),
read_csv(file="../data/kids_inf_2_data.csv"))%>%
filter(subage != "2",
trial != "filler1",
trial != "filler2")%>%
mutate(age_bin = factor(subage),
experiment = "informativeness_pretest",
condition = ifelse(control == "no", "test", "control"),
minage = min(age_num))%>%
select(experiment,subid,age_bin,age_num,trial,condition,agent,correct,minage)
inf_data
pre_data <- bind_rows(pref_data,
inf_data)
ex3_data <- read_csv(file="../data/kids_ex3_data.csv")%>%
filter(trial != "filler1",trial != "filler2")
pre_so <- pre_data %>%
filter(experiment == "informativeness_pretest")%>%
group_by(age_num,subid)%>%
summarise(correct = mean(correct))
plot_inf <- ggplot(data = pre_so, aes(x = age_num, y = correct)) +
geom_jitter(alpha = 1, height = 0.1, width = 0.1, col = "grey")+
geom_smooth(method = "lm", se = T, col = "black",fill = "darkgreen", alpha = .4, size = .4)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="age",y="Proportion Expected Choice")+
theme_few() +
ggtitle("Informativeness data")+
ylim(-0.05,1.05)+
guides(alpha = F)+
coord_fixed(ratio = 2)
plot_inf
pre_prior <- pre_data %>%
filter(experiment == "preference_pretest")%>%
group_by(condition,age_num,subid)%>%
summarise(correct = mean(correct))
plot_pref <- ggplot(data = pre_prior, aes(x = age_num, y = correct, col = condition)) +
geom_jitter(alpha = 0.5, height = 0.1, width = 0.1)+
geom_smooth(aes(fill = condition),method = "lm", se = T, col = "black",  alpha = .5, size = .4)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ggtitle("Preference data")+
ylim(-0.05,1.05)+
guides(alpha = F)+
coord_fixed(ratio = 2)+
scale_color_solarized()+
scale_fill_solarized()
ggarrange(plot_inf, plot_pref, widths = c(1.29,2))
rsaUtils <- '
var all_objects = [
{ shape: "triangle", id:1, location: 1},
{ shape: "triangle", id:2, location: 2},
{ shape: "circle", id:1, location: 2}
]
var prior_objects = [
{ shape: "triangle", id:1, location: 1},
{ shape: "circle", id:1, location: 2}
]
var labels = ["dax","wug"]
var lexicon1 = function(utterance, obj){
utterance.label == "dax" ? obj.shape == "triangle" :
utterance.label == "wug" ? obj.shape == "circle" :
true
}
var lexicon2 = function(utterance, obj){
utterance.label == "dax" ? obj.shape == "circle" :
utterance.label == "wug" ? obj.shape == "triangle" :
true
}
var lexiconObjects = {
"dax = triangle": {
triangle: "dax", circle: "wug"
},
"dax = circle": {
triangle: "wug", circle: "dax"
},
}
var lexiconObject = {
"dax = triangle": lexicon1,
"dax = circle" : lexicon2
}
var point = function(utterance, obj){
return obj.location == utterance.point
}
var utterancePrior = function(obj, lexiconName){
var locationsWithShape = _.map(_.filter(all_objects, {shape: obj.shape}), "location")
var point = uniformDraw(locationsWithShape)
var label = lexiconObjects[lexiconName][obj.shape]
return {label: label, point: point}
}
var LexiconPrior = Categorical({vs: ["dax = triangle","dax = circle" ], ps: [1, 1]})
'
rsaModel <- '
var literalListener = cache(function(utterance, priorProbs){
Infer({method: "enumerate", model: function(){
var lexiconName = sample(LexiconPrior);
var lexicon = lexiconObject[lexiconName];
var obj = sample( Categorical({vs: all_objects, ps: priorProbs}));
if ("label" in utterance) {
var truthValue = lexicon(utterance, obj);
condition(truthValue)
}
if (utterance.point) {
var truthValuePoint = point(utterance, obj);
condition(truthValuePoint)
}
return obj.shape
}})
})
var speaker = cache(function(obj, lexiconName, priorProbs, speakerOptimality){
Infer({method: "enumerate", model: function(){
var utterance = utterancePrior(obj, lexiconName);
var L0 = literalListener(utterance, priorProbs);
factor(speakerOptimality * L0.score(obj.shape))
return utterance
}})
})
var pragmaticListener = cache(function(utterance, priorProbs, speakerOptimality){
Infer({method: "enumerate", model: function(){
var lexiconName = sample(LexiconPrior);
var obj = sample( Categorical({vs: all_objects, ps: priorProbs}));
var S1 = speaker(obj, lexiconName, priorProbs, speakerOptimality);
observe(S1, utterance)
return obj.shape == "circle" ? 1 : 0
}})
})
var addNoise = function(dist, noiseParam){
Infer({model: function(){
return flip(noiseParam) ? uniformDraw([0, 1]) : sample(dist)
}
})
}
'
