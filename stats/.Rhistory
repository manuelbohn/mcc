wp.rs.all <- bind_rows(
wp.rs.all,
rs.wp %>%
mutate(condition = conditionName)
)
}
data.summary <- data %>%
mutate(condition = paste(experiment,change, alignment, sep = "_")) %>%
group_by(condition) %>%
summarize(n= n(),
k = sum(correct_inf))
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary
)
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary
) %>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(condition)
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary
) %>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(condition) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
wp.rs.all <- data.frame()
for (conditionName in names(priorProbsFromR)) {
priorProbs <- priorProbsFromR[[conditionName]]
rs.wp <- webppl(
program_code = paste(rsaUtils, rsaModel, sep='\n'),
data = priorProbs,
data_var = "priorProbs"
)
wp.rs.all <- bind_rows(
wp.rs.all,
rs.wp %>%
mutate(condition = conditionName,
model = "Full model")
)
}
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary
) %>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T))
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary
) %>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
predictions
str(predictions)
predictions
prior_only <- predictions %>%
filter(Model = "Prior_only")%>%
mutate(condition = data.summary$condition)
prior_only
predictions
prior_only <- predictions %>%
filter(Model = "Prior_only")
prior_only <- predictions %>%
filter(Model == "Prior only")%>%
mutate(condition = data.summary$condition)
prior_only
con <- c("pref_inf_same_congruent",
"pref_inf_same_incongruent",
"pref_inf_diff_congruent",
"pref_inf_diff_incongruent",
"novel_inf_same_congruent",
"novel_inf_same_incongruent",
"novel_inf_diff_congruent",
"novel_inf_diff_incongruent")
prior_only <- predictions %>%
filter(Model == "Prior only")%>%
mutate(condition = con)
prior_only
no_prior <- predictions %>%
filter(Model == "No prior")%>%
mutate(condition = con)
no_prior
wp.rs.all <- data.frame()
for (conditionName in names(priorProbsFromR)) {
priorProbs <- priorProbsFromR[[conditionName]]
rs.wp <- webppl(
program_code = paste(rsaUtils, rsaModel, sep='\n'),
data = priorProbs,
data_var = "priorProbs"
)
wp.rs.all <- bind_rows(
wp.rs.all,
rs.wp %>%
mutate(condition = conditionName,
Model = "Full model")
)
}
prior_only <- predictions %>%
filter(Model == "Prior only")%>%
mutate(condition = con)
prior_only <- predictions %>%
filter(Model == "Prior only")%>%
mutate(condition = con)
no_prior <- predictions %>%
filter(Model == "No prior")%>%
mutate(condition = con)
data.summary <- data %>%
mutate(condition = paste(experiment,change, alignment, sep = "_")) %>%
group_by(condition) %>%
summarize(n= n(),
k = sum(correct_inf))
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary,
no_prior,
prior_only
)
wp.rs.all
data.summary
no_prior
prior_only
?left_join
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary,
no_prior,
prior_only,
by = condition
)
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary,
no_prior,
prior_only,
by = "condition"
)
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary
#no_prior,
#prior_only
) %>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary
#no_prior,
#prior_only
) %>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary,
no_prior
#prior_only
) %>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary,
no_prior,
prior_only,
by = NULL
) %>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary,
no_prior,
prior_only,
by = NULL
)
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary
)
rbind(
left_join(
wp.rs.all %>% filter(obj == "circle"),
data.summary),
left_join(
no_prior,
data.summary),
left_join(
prior_only,
data.summary)
)
no_prior
wp.rs.all
no_prior
data.summary
rbind(
left_join(
wp.rs.all %>% filter(obj == "circle") %>%select(condition,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prop = corr)%>%select(condition,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prop = corr)%>%select(condition,Model,prob),
data.summary)
)
no_prior
rbind(
left_join(
wp.rs.all %>% filter(obj == "circle") %>%select(condition,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr)%>%select(condition,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr)%>%select(condition,Model,prob),
data.summary)
)
rbind(
left_join(
wp.rs.all %>% filter(obj == "circle") %>%select(condition,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr)%>%select(condition,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr)%>%select(condition,Model,prob),
data.summary)
)%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
wp.rs.all
wp.rs.all
rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,exp,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,exp,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model, exp) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
model_comparison <- rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,exp,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
model_comparison
model_comparison$log_p_data_given_model[Model == "Full model"]
model_comparison$log_p_data_given_model[model_comparison$Model == "Full model"]
model_comparison
model_comparison[1,2]
model_comparison
bf_full_prior <- exp(model_comparison[1,2] - model_comparison[1,3])
model_comparison[1,2] - model_comparison[1,3]
model_comparison[2,2]
bf_full_prior <- exp(model_comparison[1,2] - model_comparison[2,2])
bf_full_no_prior <- exp(model_comparison[1,2] - model_comparison[3,2])
bf_full_prior
model_comparison[1,2] - model_comparison[2,2]
log(1)
log(2)
exp(log(2))
exp(20.95611)
exp(22)
bf_full_no_prior <- exp(model_comparison[1,2] - model_comparison[3,2])
bf_full_no_prior
model_comparison
log(model_comparison[1,2] - model_comparison[2,2])
log(model_comparison[1,2] - model_comparison[3,2])
bf_full_no_prior <- exp((model_comparison[1,2] - model_comparison[3,2]))
bf_full_prior <- exp((model_comparison[1,2] - model_comparison[2,2]))
bf_full_no_prior <- exp((model_comparison[1,2] - model_comparison[3,2]))
bf_full_prior
bf_full_no_prior
exp(0.5)
bf_full_no_prior <- exp((model_comparison[1,2] - model_comparison[3,2]))
bf_full_no_prior
bf_full_prior <- 1/exp((model_comparison[1,2] - model_comparison[2,2]))
bf_full_no_prior <- 1/exp((model_comparison[1,2] - model_comparison[3,2]))
bf_full_prior
bf_full_no_prior
model_comparison[1,2] - model_comparison[3,2]
model_comparison[1,2] - model_comparison[2,2]
model_comparison <- rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,exp,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model, exp) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
model_comparison
model_comparison
rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,exp,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)
model_comparison <- rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,exp,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model, exp) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
model_comparison
model_comparison <- rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,exp,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
model_comparison
model_comparison[1,2] - model_comparison[2,2]
model_comparison
bf_full_prior_only <- 1/exp((model_comparison[1,2] - model_comparison[3,2]))
bf_full_prior_only
bf_full_no_prior <- exp((model_comparison[1,2] - model_comparison[2,2]))
bf_full_no_prior
bf_full_prior_only <- 1/exp((model_comparison[1,2] - model_comparison[3,2]))
bf_full_prior_only
e^12
bf_full_prior_only <- exp((model_comparison[1,2] - model_comparison[3,2]))
bf_full_prior_only
comp_model<- model_comparison%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
model_comparison <- rbind(
left_join(
wp.rs.all %>% filter(obj == "circle")%>%mutate(exp = substr(condition,1,4)) %>%select(condition,exp,Model,prob),
data.summary),
left_join(
no_prior%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary),
left_join(
prior_only%>%mutate(prob = corr, exp = substr(condition,1,4))%>%select(condition,exp,Model,prob),
data.summary)
)
comp_model<- model_comparison%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
bf_full_no_prior <- exp((comp_model[1,2] - comp_model[2,2]))
bf_full_prior_only <- exp((comp_model[1,2] - comp_model[3,2]))
bf_full_no_prior
comp_model_by_exp<- model_comparison%>%
mutate(p_data_given_model = dbinom(size = n, p = prob, x = k, log = T)) %>%
group_by(Model,exp) %>%
summarize(log_p_data_given_model = sum(p_data_given_model))
comp_model_by_exp
comp_model[6,3]
comp_model_by_exp
comp_model_by_exp[6,3]
comp_model_by_exp[2,3]
comp_model_by_exp
pref_bf_full_prior_only <- exp((comp_model_by_exp[2,3] - comp_model_by_exp[6,3]))
novel_bf_full_prior_only <- exp((comp_model_by_exp[1,3] - comp_model_by_exp[5,3]))
pref_bf_full_prior_only
novel_bf_full_prior_only
pref_bf_full_prior_only
comp_model_by_exp[2,3] - comp_model_by_exp[6,3]
comp_model
comp_model_by_exp
pref_bf_full_prior_only <- exp(comp_model_by_exp[2,3] - comp_model_by_exp[6,3])
novel_bf_full_prior_only <- exp(comp_model_by_exp[1,3] - comp_model_by_exp[5,3])
pref_bf_full_prior_only
novel_bf_full_prior_only
wp.rs.all
wp.rs.all %>% filter(obj == "circle")
x = wp.rs.all %>% filter(obj == "circle")
y = predictions$corr[predictions$Model == "Full model"]
x = wp.rs.all %>% filter(obj == "circle")%>%select(prob)
y = predictions$corr[predictions$Model == "Full model"]
x-y
x
cbind(x,y)
data <- read.csv("data/emopoint.data.csv", sep=",")
contr=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=100000000))
np <- data %>%
filter(phase == "point" & type =="neg") %>%
mutate(trial=scale(trial, center = TRUE, scale=TRUE),
unique_group = scale(as.numeric(unique_group), center = TRUE, scale=TRUE))
l <- glmer(corr~ unique_group+ trial+
(trial||id),
data=np, family=binomial, control = contr)
summary (l)
q <- glmer(corr~ unique_group+ I(unique_group^2)+ trial+
(trial|id),
data=np, family=binomial, control = contr)
q <- glmer(corr~ unique_group+ I(unique_group^2)+ trial+
(trial||id),
data=np, family=binomial, control = contr)
anova(l,q,test ="Chi")
summary (q)
drop1(q, test = "Chi")
ms <- data %>%
group_by(unique_group,study,type, id) %>%
summarise(correct = mean(corr)) %>%
multi_boot_standard(col = "correct")
props <- data %>%
group_by(id, type,unique_group,study, id) %>%
summarise(corr = mean(corr))
source("geom_flat_violin.R")
ggplot()+
geom_count(data = props,aes(x = unique_group, y = corr), shape =21, stroke = .8, alpha = .8, position = position_nudge(-0.2))+
geom_flat_violin(data = props, scale = "width",adjust = .7, trim = F, aes(x = unique_group, y = corr),position = position_nudge(0))+
geom_hline(yintercept = 0.5, size = 0.5, lty=2)+
scale_size_continuous(range = c(3,8))+
guides(size=FALSE)+
ylim(-0.05,1.05)+
labs(x="Age in Month",y="Proportion Correct")+
scale_colour_manual(name="Facial Expression",
labels=c("Positive", "Negative"), values=c("darkgreen", "firebrick"))+
guides(colour = guide_legend(keywidth = 2, keyheight = 2))+
scale_x_discrete(
breaks = c("pointA22apos", "pointA22neg","pointA28neg","pointA34neg","pointA40neg","pointA46neg","peekA22neg","peekA28neg","peekA34neg"),
labels= c("22", "22","28","34","40","46","22","28","34"))+
facet_grid(.~ study, scales = "free_x", space = "free_x",
labeller = as_labeller(c(`1`="Study 1 - Pointing", `2`="Study 2 - Pointing", `3`="Study 3 - Peeking")))+
geom_point(data=ms,aes(x = unique_group, y = mean,colour = factor(type)), size = 4, stat="identity",position = position_nudge(-0.2)) +
geom_linerange(data = ms, aes(x = unique_group,colour = factor(type),y = mean, ymin = ci_lower, ymax = ci_upper), position = position_nudge(-0.2), size = 1.1) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))+
theme_few()
data %>%
filter (trial == "1") %>%
group_by(study,phase,age, type) %>%
arrange(study, age) %>%
summarise(m_age = mean(aged)/30.42,
sd_age = sd(aged)/30.42,
ll_age = min(aged)/30.42,
ul_age = max(aged)/30.42,
sex_m = sum (sex)) %>%
knitr::kable(digits = 2)
