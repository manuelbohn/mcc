filter(trial_type == "test")%>%
mutate(choiceAgent = ifelse( change == "false", agent, altAgent),
age_num = scale(age_num, center = TRUE, scale = TRUE),
age = scale(age, center = TRUE, scale = TRUE))
lm <- glmer(correct ~ age_num * change + ( change |subid) + (age_num * change |choiceAgent),
data = data_cg, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
lm <- glmer(correct ~ age_num * change + ( change |subid) + (age_num + change |choiceAgent),
data = data_cg, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm)
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "loess", se = T)+
geom_point( alpha = .5)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "lm", se = T)+
geom_point( alpha = .5)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "loess", se = T)+
geom_jitter( alpha = .5)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
lm <- glmer(correct ~ age_num * change + (change |subid) + (age_num * change |choiceAgent),
data = data_cg, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm)
lm <- glmer(correct ~ age_num * change + (change |subid) + (age_num + change |choiceAgent),
data = data_cg, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm)
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "loess", se = T)+
geom_jitter( alpha = .5)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
lm <- glmer(correct ~ age_num * change + (change |subid) + (age_num * change || choiceAgent),
data = data_cg, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm)
lm <- glmer(correct ~ age_num * change + (change |subid) + (age_num + change | choiceAgent),
data = data_cg, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm)
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "loess", se = T)+
geom_jitter( alpha = .5, height = 0)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "loess", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
d <- read_csv(file="kids_inf.data.csv")%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))
p5 <- d %>%
filter(trial_type == "test") %>%
group_by(control,age_num, subid) %>%
summarise(correct = mean(correct))
ggplot(data = p5, aes(x = age_num, y = correct, col = control)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p5 <- d %>%
filter(trial_type == "test", age_num > 1) %>%
group_by(control,age_num, subid) %>%
summarise(correct = mean(correct))
ggplot(data = p5, aes(x = age_num, y = correct, col = control)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
ggplot(data = p5, aes(x = age_num, y = correct, col = control)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Control",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p5
ggplot(data = p5, aes(x = age_num, y = correct, col = control)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Control",
breaks=c("false", "true"),
labels=c("No", "Yes"))
unique(d$subid)
View(D)
View(d)
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_info_data/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(test_date= jf,
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
inf.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.condition","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.trial","^data.control","^data.rt", "^data.correct"))
names(inf.data) = c("test_date","alltrial","subid","age","condition","agent","leftObject","rightObject","targetOnTable","pick","target","trial","control","rt","correct")
inf.data = inf.data[!duplicated(inf.data), ]
inf.data = inf.data[order(subid)]
inf.data$trial[inf.data$trial=="train1"]="train"
inf.data$trial[inf.data$trial=="train2"]="train"
inf.data <- inf.data%>%
mutate(pick = ifelse(subid == "180405_2_inf" | subid == "180718", str_sub(pick,123,str_length(pick)-4) , str_sub(pick,51,str_length(pick)-4)))
# calculating age
inf.data $test_date = as.Date(str_sub(inf.data $test_date,43,str_length(inf.data $test_date)-11))
# change subid for subjects so that they match the subject log file
inf.data <- inf.data%>%
filter(subid != "Dryrun")%>%
mutate(subid = ifelse(subid == "180723_11_pref","180723_11_inf", subid))
# load subject log file
log <- read_excel("../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "inf")%>%
select(subid,experimenter,keep_drop,sex,dob)
# koin datasets
inf.data <- left_join(inf.data,log, by = "subid")
# calcualte numerical age at test
inf.data <- inf.data %>%
filter(keep_drop == "keep")%>%
mutate(dob = as.numeric(dob),
dob = as.Date(dob,origin = "1899-12-30"),
age_num = lubridate::time_length(difftime(test_date,dob), "years"),
check_age = ifelse(substr(age_num,1,1) == age, T, F))
View(inf.data)
log
View(log)
log <- read_excel("../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "pref")%>%
select(subid,experimenter,keep_drop,sex,dob)
View(log)
log <- read_excel("../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "pref")
files <- dir("~/Work/MCC/git-mcc/kids_pref_data")
#combine files into one dataframe
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_pref_data/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(test_date= jf,
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
pref.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.condition","^data.agent","^data.altAgent","^data.leftFruit","^data.rightFruit","^data.pick","^data.pref","^data.trial","^data.speakerChange","^data.rt", "^data.correct"))
names(pref.data) = c("test_date","alltrial","subid","age","condition","agent","altAgent","leftObject","rightObject","pick","target","trial","change","rt","correct")
pref.data$pick= str_sub(pref.data$pick,118,str_length(pref.data$pick)-4)
pref.data = pref.data[!duplicated(pref.data), ]
pref.data = pref.data[order(subid)]
# calculating age
pref.data $test_date = as.Date(str_sub(pref.data $test_date,43,str_length(pref.data $test_date)-11))
# change subid for subjects so that they match the subject log file
pref.data <- pref.data%>%
filter(subid != "Dryrun")%>%
mutate(subid = ifelse(subid == "190718_9_pref" & age == 2,"190718_8_pref", subid),
subid = ifelse(subid == "120503_2_pref","180503_2_pref", subid),
subid = ifelse(subid == "209718_6_pref","200718_6_pref", subid))
# load subject log file
log <- read_excel("../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "pref")%>%
select(subid,experimenter,keep_drop,sex,dob)
# join datasets
pref.data <- left_join(pref.data,log, by = "subid")
# calcualte numerical age at test
pref.data <- pref.data %>%
filter(keep_drop == "keep")%>%
mutate(age = str_replace(age, " ", ""),
age = ifelse(subid == "180503_3_pref",2,age), # Wrong age group has been entered for that subject, did not match with dob on consent form
dob = as.numeric(dob),
dob = as.Date(dob,origin = "1899-12-30"),
age_num = lubridate::time_length(difftime(test_date,dob), "years"),
check_age = ifelse(substr(age_num,1,1) == age, T, F))
# remove identifiable information
pref.data <- pref.data %>%
select(-dob,-test_date,-check_age,-keep_drop,-experimenter,-sex)
View(pref.data)
log <- read_excel("../../MCC-subject_log.xlsx", 1)
log <- read_excel("../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "pref")
d_ipad <- read_csv(file="kids_pref.data.csv")
d_hand_code <- read.csv(file="kids_pref_handcoding.data.csv", sep = ";")%>%
mutate(age_num = as.numeric(as.character(age_num)))
d <- bind_rows(d_ipad,d_hand_code)%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))%>%
filter(subid != "200718_8_pref")
d %>%
group_by(trial_type) %>%
summarise(n = length(unique(subid)),
correct = mean(correct)) %>%
knitr::kable(digits = 2)
d %>%
filter(trial_type == "train") %>%
group_by(subid)%>%
summarise(correct = mean(correct)) %>%
filter(correct == 0)
d %>%
group_by(age)%>%
summarise(n = length(unique(subid)),
age_num = mean(age_num))%>%
knitr::kable(digits = 2)
p3 <- d %>%
filter(trial_type == "test") %>%
group_by(change, subid) %>%
summarise(correct = mean(correct))
p4 <- p3 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p3, aes(x = change, y = correct, col = change, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p4, aes(x = change, y = mean, col = change, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p1 <- d %>%
filter(trial_type == "test") %>%
group_by(change,age, subid) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = change, y = correct, col = change, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = change, y = mean, col = change, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_wrap(~age)+
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p5 <- d %>%
filter(trial_type == "test") %>%
group_by(change,age_num, subid) %>%
summarise(correct = mean(correct))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "lm", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
d %>%
filter(trial_type == "test") %>%
group_by(change, subid) %>%
summarise(correct = mean(correct)) %>%
summarise(correct = list(correct)) %>%
group_by(change) %>%
mutate(df= t.test(unlist(correct), mu = 0.5)$parameter,
t_value = t.test(unlist(correct), mu = 0.5)$statistic,
p_value = t.test(unlist(correct), mu = 0.5)$p.value) %>%
select(change,df,t_value,p_value) %>%
knitr::kable(digits = 3)
d %>%
filter(trial_type == "test") %>%
group_by(age,change, subid) %>%
summarise(correct = mean(correct)) %>%
summarise(correct = list(correct)) %>%
group_by(age,change) %>%
mutate(df= t.test(unlist(correct), mu = 0.5)$parameter,
t_value = t.test(unlist(correct), mu = 0.5)$statistic,
p_value = t.test(unlist(correct), mu = 0.5)$p.value) %>%
select(age,change,df,t_value,p_value) %>%
knitr::kable(digits = 3)
library(lme4)
data_cg <- d%>%
filter(trial_type == "test")%>%
mutate(choiceAgent = ifelse( change == "false", agent, altAgent),
age_num = scale(age_num, center = TRUE, scale = TRUE),
age = scale(age, center = TRUE, scale = TRUE))
lm <- glmer(correct ~ age_num * change + (change |subid) + (age_num + change | choiceAgent),
data = data_cg, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm)
?count
knitr::opts_chunk$set(echo = FALSE)
###
library(tidyverse)
library(knitr)
library(langcog)
library(ggthemes)
## importing data
d_ipad <- read_csv(file="kids_pref.data.csv")
d_hand_code <- read.csv(file="kids_pref_handcoding.data.csv", sep = ";")%>%
mutate(age_num = as.numeric(as.character(age_num)))
d <- bind_rows(d_ipad,d_hand_code)%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))%>%
filter(subid != "200718_8_pref")
# check if someone needs to be excluded because wrong in training
# no one
d %>%
filter(trial_type == "train") %>%
group_by(subid)%>%
summarise(correct = mean(correct)) %>%
filter(correct == 0)
d %>%
group_by(age)%>%
summarise(n = length(unique(subid)),
sex = count(sex),
age_num = mean(age_num))%>%
knitr::kable(digits = 2)
d
files <- dir("~/Work/MCC/git-mcc/kids_pref_data")
#combine files into one dataframe
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_pref_data/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(test_date= jf,
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
pref.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.condition","^data.agent","^data.altAgent","^data.leftFruit","^data.rightFruit","^data.pick","^data.pref","^data.trial","^data.speakerChange","^data.rt", "^data.correct"))
names(pref.data) = c("test_date","alltrial","subid","age","condition","agent","altAgent","leftObject","rightObject","pick","target","trial","change","rt","correct")
pref.data$pick= str_sub(pref.data$pick,118,str_length(pref.data$pick)-4)
pref.data = pref.data[!duplicated(pref.data), ]
pref.data = pref.data[order(subid)]
# calculating age
pref.data $test_date = as.Date(str_sub(pref.data $test_date,43,str_length(pref.data $test_date)-11))
# change subid for subjects so that they match the subject log file
pref.data <- pref.data%>%
filter(subid != "Dryrun")%>%
mutate(subid = ifelse(subid == "190718_9_pref" & age == 2,"190718_8_pref", subid),
subid = ifelse(subid == "120503_2_pref","180503_2_pref", subid),
subid = ifelse(subid == "209718_6_pref","200718_6_pref", subid))
# load subject log file
log <- read_excel("../../MCC-subject_log.xlsx", 1)%>%
filter(Condition == "pref")%>%
select(subid,experimenter,keep_drop,sex,dob)
# join datasets
pref.data <- left_join(pref.data,log, by = "subid")
# calcualte numerical age at test
pref.data <- pref.data %>%
filter(keep_drop == "keep")%>%
mutate(age = str_replace(age, " ", ""),
age = ifelse(subid == "180503_3_pref",2,age), # Wrong age group has been entered for that subject, did not match with dob on consent form
dob = as.numeric(dob),
dob = as.Date(dob,origin = "1899-12-30"),
age_num = lubridate::time_length(difftime(test_date,dob), "years"),
check_age = ifelse(substr(age_num,1,1) == age, T, F))
pref.data%>%
group_by(age)%>%
summarise(sex = count(sex))
pref.data%>%
group_by(age)%>%
summarise(sex = sum(sex))
pref.data%>%
group_by(age)%>%
summarise(sex = sum(as.numeric(sex)))
pref.data$sex
as.numeric(pref.data$sex)
pref.data%>%
group_by(age)%>%
summarise(sex = sum(as.numeric(as.factor(pref.data$sex))))
as.numeric(as.factor(pref.data$sex)))
sum(as.numeric(as.factor(pref.data$sex))))
pref.data%>%
filter(sex == "F")%>%
group_by(age)%>%
summarise(sex_ratio = length(unique(subid))/15)
## model
library(lme4)
lm_data <- d%>%
filter(trial_type == "test")%>%
mutate(choiceAgent = ifelse( change == "false", agent, altAgent),
age_num = scale(age_num, center = TRUE, scale = TRUE),
age = scale(age, center = TRUE, scale = TRUE))
# maximal converging model
lm <- glmer(correct ~ age_num * change + (change |subid) + (age_num + change | choiceAgent),
data = lm_data, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm)
lm_data <- d%>%
filter(trial_type == "test")%>%
mutate(choiceAgent = ifelse( change == "false", agent, altAgent),
age_num = scale(age_num, center = TRUE, scale = TRUE))
lm <- glmer(correct ~ age_num * change + (change |subid) + (age_num + change | choiceAgent),
data = lm_data, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lm)
fixef(lm)
fixef(lm)
coef(lm)
summary(lm)$TAble
summary(lm)$Table
summary(lm)$table
summary(lm)$coefficients
summary(lm)
