theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized()
d <- bind_rows(d1,d2) %>%
mutate(condition = ifelse(condition == "preference", 1, iflese(condition == "novelty", 2,3))
d <- bind_rows(d1,d2) %>%
d <- bind_rows(d1,d2) %>%
mutate(condition = ifelse(condition == "preference", 1, ifelse(condition == "novelty", 2,3)))
p1 <- d %>%
filter(trial_type == "test") %>%
group_by(condition ,control, id) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition) +
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized()
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition) +
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized()+
scale_fill_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))
p1
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition) +
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`1`="Common Ground - Preference", `2`="Common Ground - Novelty", `3`="Informativeness"))) +
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`1`="Common Ground - Preference", `2`="Common Ground - Novelty", `3`="Informativeness"))) +
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
d1 <- bind_rows(read_csv(file="novel.data.csv"),
read_csv(file="pref.data.csv")) %>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
control = ifelse(change == "true", "true" , "false"))
d2 <- read_csv(file="inf.data.csv") %>%
mutate(trial_type = ifelse(trial == "train1" | trial =="train2", "train", "test"))
d <- bind_rows(d1,d2) %>%
mutate(condition = ifelse(condition == "preference", 2, ifelse(condition == "novelty", 3,1)))
p1 <- d %>%
filter(trial_type == "test") %>%
group_by(condition ,control, id) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 2 - Informativeness"))) +
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 1 - Informativeness"))) +
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(ggthemes)
library(langcog)
dat <- bind_rows(read_csv(file="ex3.novel.data.csv"),
read_csv(file="ex3.pref.data.csv")) %>%
mutate(trial_type = ifelse(trial == "train1" | trial =="train2", "train", "test"))
dat %>%
filter(alignment == "incongruent") %>%
filter(correct_inf == correct_prior)
dat %>%
filter(trial_type == "train") %>%
group_by(id)%>%
summarise(correct_inf = mean(correct_inf)) %>%
filter(correct_inf == 0)
x <- dat %>%
filter(trial_type == "train") %>%
group_by(id)%>%
summarise(n = length(correct_inf)) %>%
filter(n > 2)
data <- dat %>%
filter(!id %in% x$id) %>%
filter(trial_type != "train") %>%
mutate(Change = ifelse(change =="same", "Same speaker", "Different speaker"),
Alignment = ifelse(alignment == "congruent", "Congruent", "Incongruent"),
Experiment = ifelse(experiment == "pref_inf", "Preference", "Novelty"))
data %>%
group_by(experiment,alignment,change) %>%
summarise(n = length(id))
data %>%
filter(trial_type == "test") %>%
group_by(change ,experiment,alignment, id) %>%
summarise(correct_inf = mean(correct_inf)) %>%
summarize(correct_inf = list(correct_inf)) %>%
group_by(change ,experiment,alignment) %>%
mutate(mean = mean(unlist(correct_inf)),
stat = wilcox.exact(unlist(correct_inf), mu = 0.5)$statistic,
p_value = wilcox.exact(unlist(correct_inf), mu = 0.5)$p.value) %>%
select(change ,experiment,alignment,mean,stat,p_value)%>%
knitr::kable(digits = 3)
predictions <- data.frame(
Experiment = c("Preference","Preference","Preference","Preference","Novelty","Novelty","Novelty","Novelty","Preference","Preference","Preference","Preference","Novelty","Novelty","Novelty","Novelty","Preference","Preference","Preference","Preference","Novelty","Novelty","Novelty","Novelty"),
Change = c("Same speaker","Same speaker","Different speaker","Different speaker","Same speaker","Same speaker","Different speaker","Different speaker","Same speaker","Same speaker","Different speaker","Different speaker","Same speaker","Same speaker","Different speaker","Different speaker","Same speaker","Same speaker","Different speaker","Different speaker","Same speaker","Same speaker","Different speaker","Different speaker"),
Alignment = c("Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent","Congruent","Incongruent"),
Model = c("Full model","Full model","Full model","Full model","Full model","Full model","Full model","Full model","No prior","No prior","No prior","No prior","No prior","No prior","No prior","No prior", "Prior only","Prior only","Prior only","Prior only","Prior only","Prior only","Prior only","Prior only"),
corr = c(0.9999672744165804,0.03460862921907267,0.9083230583454356,0.5090645649737232,0.9930727540990627,0.20045767964927574,0.8603373265403738,0.594975610001643,0.742,0.742,0.742,0.742,0.742,0.742,0.742,0.742,0.967,0.033,0.642,0.358,0.833,0.167,0.592,0.408))
pred <- predictions %>%
group_by(Model,Experiment,Change,Alignment)%>%
multi_boot_standard(col = "corr")
da <- data %>%
filter(trial_type=="test")%>%
mutate(Change = ifelse(change =="same", "Same speaker", "Different speaker"),
Alignment = ifelse(alignment == "congruent", "Congruent", "Incongruent"),
Experiment = ifelse(experiment == "pref_inf", "Preference", "Novelty"),
Model = "Data") %>%
group_by(Model,Experiment,Change,Alignment,id)%>%
summarise(correct_inf = mean(correct_inf)) %>%
multi_boot_standard(col = "correct_inf")
pd <- rbind(pred,da)
library(ggpubr)
plot1 <- data.frame(pd$Experiment[pd$Model=="Data"],pd$mean[pd$Model=="Data"],pd$mean[pd$Model=="Prior only"],rep("Data vs Prior only",8))
plot2 <- data.frame(pd$Experiment[pd$Model=="Data"],pd$mean[pd$Model=="Data"],pd$mean[pd$Model=="Full model"],rep("Data vs Full model",8))
names(plot2) = c("Experiment","Data","Model","Comp")
plot2
ggplot(data = plot2,aes(x = Model, y = Data, col = Comp)) +
geom_point()+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
guides(col = F)+
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data, col = Comp)) +
geom_point(size = 2)+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
guides(col = F)+
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data, col = Comp)) +
geom_point(size = 3)+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
guides(col = F)+
scale_colour_solarized()
plot1
plot2
pd
plot2 <- data.frame(pd$Experiment[pd$Model=="Data"],pd$mean[pd$Model=="Data"],pd$ci_lower[pd$Model=="Data"],pd$ci_upper[pd$Model=="Data"],pd$mean[pd$Model=="Full model"],rep("Data vs Full model",8))
names(plot2) = c("Experiment","Data","ci_lower","ci_upper","Model","Comp")
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper), size = 1)+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
guides(col = F)+
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Comp), size = 1)+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
guides(col = F)+
scale_colour_solarized()
pd
pd2 <- pd %>%
mutate(Condition = paste(Experiment, Change, Alignment, sep = " "))
pd2
pd2 <- pd %>%
mutate(Condition = paste(Experiment, Change, Alignment, sep = " - "))
pd2
plot2 <- data.frame(pd2$Condition[pd2$Model=="Data"],pd$mean[pd$Model=="Data"],pd$ci_lower[pd$Model=="Data"],pd$ci_upper[pd$Model=="Data"],pd$mean[pd$Model=="Full model"],rep("Data vs Full model",8))
names(plot2) = c("Condition","Data","ci_lower","ci_upper","Model","Comp")
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
scale_colour_solarized()
pd2 <- pd %>%
mutate(Condition = paste(substr(Experiment,1,3), Change, Alignment, sep = " - "))
pd2
pd2 <- pd %>%
mutate(Condition = paste(substr(Experiment,1,3), substr(Change,1,3), substr(Alignment,1,3), sep = " - "))
plot2 <- data.frame(pd2$Condition[pd2$Model=="Data"],pd$mean[pd$Model=="Data"],pd$ci_lower[pd$Model=="Data"],pd$ci_upper[pd$Model=="Data"],pd$mean[pd$Model=="Full model"],rep("Data vs Full model",8))
names(plot2) = c("Condition","Data","ci_lower","ci_upper","Model","Comp")
plot <- rbind(plot1,plot2)
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.2, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.2, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few() +
scale_colour_solarized()
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 1 - Informativeness"))) +
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 1 - Informativeness"))) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 1 - Informativeness"))) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 1 - Informativeness"))) +
theme_few(base_size = 14) +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.2, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few(base_size = 14) +
scale_colour_solarized()
?stat_cor
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.2, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few(base_size = 14) +
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.4, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few(base_size = 14) +
scale_colour_solarized()
ggplot(data = plot2,aes(x = Model, y = Data)) +
#geom_point(size = 3)+
geom_pointrange(aes(x = Model, y = Data,ymin = ci_lower, ymax = ci_upper, col = Condition), size = 1)+
stat_cor(method = "pearson", label.x = 0.3, label.y = 0.9)+
geom_smooth(method = "lm", se = F, col = "black")+
theme_few(base_size = 14) +
scale_colour_solarized()
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 1 - Informativeness"))) +
theme_few(base_size = 14) +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 1 - Info."))) +
theme_few(base_size = 14) +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`2`="Exp. 2 - Preference", `3`="Exp. 2 - Novelty", `1`="Exp. 1 - Info."))) +
theme_few(base_size = 14) +
ylim(-0.05,1.05)+
guides(alpha = F)+
scale_colour_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control"))+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
setwd("~/Work/MCC/git-mcc/mcc/stats/")
files <- dir("~/Work/MCC/git-mcc/kids_pref_data")
#combine files into one dataframe
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_pref_data/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
pref.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.condition","^data.agent","^data.altAgent","^data.leftFruit","^data.rightFruit","^data.pick","^data.pref","^data.trial","^data.speakerChange","^data.rt", "^data.correct"))
names(pref.data) = c("alltrial","id","age","condition","agent","altAgent","leftObject","rightObject","pick","target","trial","change","rt","correct")
pref.data$pick= str_sub(pref.data$pick,118,str_length(pref.data$pick)-4)
pref.data = pref.data[!duplicated(pref.data), ]
pref.data = pref.data[order(id)]
# check resulting datafile
str(pref.data)
head(pref.data)
# write csv file for further analysis
write.csv(pref.data, file="kids_pref.data.csv")
library(rjson)
library(tidyr)
library(stringr)
library(dplyr)
library(data.table)
files <- dir("~/Work/MCC/git-mcc/kids_pref_data")
#combine files into one dataframe
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/MCC/git-mcc/kids_pref_data/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
pref.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.condition","^data.agent","^data.altAgent","^data.leftFruit","^data.rightFruit","^data.pick","^data.pref","^data.trial","^data.speakerChange","^data.rt", "^data.correct"))
names(pref.data) = c("alltrial","id","age","condition","agent","altAgent","leftObject","rightObject","pick","target","trial","change","rt","correct")
pref.data$pick= str_sub(pref.data$pick,118,str_length(pref.data$pick)-4)
pref.data = pref.data[!duplicated(pref.data), ]
pref.data = pref.data[order(id)]
# check resulting datafile
str(pref.data)
head(pref.data)
# write csv file for further analysis
write.csv(pref.data, file="kids_pref.data.csv")
d <- bind_rows(read_csv(file="kids_pref.data.csv"),
read.csv(file="kids_pref_handcoding.data.csv", sep = ";")) %>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))
d <- bind_rows(read_csv(file="kids_pref.data.csv"),
read.csv(file="kids_pref_handcoding.data.csv", sep = ";")) %>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))
drop <- c("Dryrun","180426_3_pref","180502_1_pref","180503_1_pref","180503_2_pref","180504_1_pref","180511_2_pref","180511_1_pref")
d <- d %>%
filter(!id %in% drop)
d %>%
group_by(trial_type) %>%
summarise(n = length(unique(id)),
correct = mean(correct)) %>%
knitr::kable(digits = 2)
d %>%
filter(trial_type == "train") %>%
group_by(id)%>%
summarise(correct = mean(correct)) %>%
filter(correct == 0)
d %>%
group_by(age)%>%
summarise(n = length(unique(id)))%>%
knitr::kable(digits = 2)
p1 <- d %>%
filter(trial_type == "test") %>%
group_by(change,age, id) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = change, y = correct, col = change, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = change, y = mean, col = change, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_wrap(~age)+
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
d %>%
filter(trial_type == "test") %>%
group_by(change, id) %>%
summarise(correct = mean(correct)) %>%
summarise(correct = list(correct)) %>%
group_by(change) %>%
mutate(df= t.test(unlist(correct), mu = 0.5)$parameter,
t_value = t.test(unlist(correct), mu = 0.5)$statistic,
p_value = t.test(unlist(correct), mu = 0.5)$p.value) %>%
select(change,df,t_value,p_value) %>%
knitr::kable(digits = 2)
