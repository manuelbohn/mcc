var priorProbs = []
var logistic = function(x) {1 / (1 + Math.exp(-x))}
var model  = function(){
var pref_slope = uniformDrift({a: -2, b: 2, width: 0.4})
var pref_int = uniformDrift({a: -2, b: 2, width: 0.4})
map(function(row){
var age = row.age_num
var priorReg = logistic(pref_int + pref_slope * (age - row.minage))
var priorProbs= [1-priorReg, 1-priorReg, priorReg]
var priorPredictions = Infer({method: "enumerate", model: function(){
var obj = sample( Categorical({vs: all_objects, ps: priorProbs}));
return obj.shape == "circle" ? 1 : 0
}})
observe(priorPredictions, row.correct)
// display(JSON.stringify(priorReg))
}, prefData)
return extend({pref_int: pref_int, pref_slope: pref_slope})
}
'
pref_data
pref_data%>%filter(condition == "different_speaker")%>%mutate(minage = min(age_num)
)
postPrefWebppl <- '
var prefData = dataFromR
var priorProbs = []
var logistic = function(x) {1 / (1 + Math.exp(-x))}
var model  = function(){
var pref_slope = uniformDrift({a: -2, b: 2, width: 0.4})
var pref_int = uniformDrift({a: -2, b: 2, width: 0.4})
map(function(row){
var age = row.age_num
var priorReg = logistic(pref_int + pref_slope * (age - row.minage))
var priorProbs= [1-priorReg, 1-priorReg, priorReg]
var priorPredictions = Infer({method: "enumerate", model: function(){
var obj = sample( Categorical({vs: all_objects, ps: priorProbs}));
return obj.shape == "circle" ? 1 : 0
}})
observe(priorPredictions, row.correct)
// display(JSON.stringify(priorReg))
}, prefData)
return extend({pref_int: pref_int, pref_slope: pref_slope})
}
'
pref_post<- webppl(
program_code = paste(rsaUtils, rsaModel, postPrefWebppl , sep='\n'),
data = pref_data%>%filter(condition == "different_speaker")%>%mutate(minage = min(age_num)),
data_var = "dataFromR",
model_var = "model",
chains = 3,
cores = 3,
inference_opts = list(method = "MCMC", samples = 20, burn = 1, verbose = T)
)
prefPostPred <- pref_post%>%
spread(Parameter, value)
x_plot <- seq(0, 2, by = 0.1)
post_predictions <- sapply(1:length(prefPostPred$pref_int), function(idx) {
plogis(prefPostPred$pref_int[idx] + prefPostPred$pref_slope[idx] * x_plot)
})
colnames(post_predictions) <- 1:length(prefPostPred$pref_int)
plot_data <- as.data.frame(cbind(x_plot, post_predictions))
plot_data_melted <- melt(plot_data, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
pref_prior <- pref_prior%>%
mutate(chain = factor(Chain))
colnames(post_predictions) <- 1:length(prefPostPred$pref_int)
plot_post_data <- as.data.frame(cbind(x_plot, post_predictions))
plot_post_data <- melt(plot_post_data, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
pref_prior <- pref_prior%>%
mutate(chain = factor(Chain))
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), alpha = 0.3) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
pref_post<- webppl(
program_code = paste(rsaUtils, rsaModel, postPrefWebppl , sep='\n'),
data = pref_data%>%filter(condition == "different_speaker")%>%mutate(minage = min(age_num)),
data_var = "dataFromR",
model_var = "model",
chains = 3,
cores = 3,
inference_opts = list(method = "MCMC", samples = 200, burn = 20, verbose = T)
)
prefPostPred <- pref_post%>%
spread(Parameter, value)
x_plot <- seq(0, 2, by = 0.1)
post_predictions <- sapply(1:length(prefPostPred$pref_int), function(idx) {
plogis(prefPostPred$pref_int[idx] + prefPostPred$pref_slope[idx] * x_plot)
})
colnames(post_predictions) <- 1:length(prefPostPred$pref_int)
plot_post_data <- as.data.frame(cbind(x_plot, post_predictions))
plot_post_data <- melt(plot_post_data, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
pref_prior <- pref_prior%>%
mutate(chain = factor(Chain))
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), alpha = 0.3) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(data = pref_prior, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(~Parameter)+
theme_few()
ggplot(data = pref_prior, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(~Parameter)+
theme_few()
pref_post <- pref_post%>%
mutate(chain = factor(Chain))
ggplot(data = pref_post, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(~Parameter)+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
pref_post<- webppl(
program_code = paste(rsaUtils, rsaModel, postPrefWebppl , sep='\n'),
data = pref_data%>%filter(condition == "different_speaker")%>%mutate(minage = min(age_num)),
data_var = "dataFromR",
model_var = "model",
chains = 3,
cores = 3,
inference_opts = list(method = "MCMC", samples = 2000, burn = 200, verbose = T)
)
prefPostPred <- pref_post%>%
spread(Parameter, value)
x_plot <- seq(0, 2, by = 0.1)
post_predictions <- sapply(1:length(prefPostPred$pref_int), function(idx) {
plogis(prefPostPred$pref_int[idx] + prefPostPred$pref_slope[idx] * x_plot)
})
colnames(post_predictions) <- 1:length(prefPostPred$pref_int)
plot_post_data <- as.data.frame(cbind(x_plot, post_predictions))
plot_post_data <- melt(plot_post_data, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
pref_post <- pref_post%>%
mutate(chain = factor(Chain))
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration, col = "yellow"), alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration, col = 1), alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration, col = 2), alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
?geom_line
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = 2, alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = 1, alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = 3, alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = 4, alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "lightyellow", alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "yellow", alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "grey", alpha = 0.1) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "grey", alpha = 0.2) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
plot_post_data
plot_post_data_mean <- plot_post_data%>%
group_by(x_plot)%>%
summarise(y_plot = mean(y_plot))
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "grey", alpha = 0.2) +
geom_line(data = plot_post_data_mean, aes(x_plot, y_plot), col = "black") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
pref_post<- webppl(
program_code = paste(rsaUtils, rsaModel, postPrefWebppl , sep='\n'),
data = pref_data%>%filter(condition == "same_speaker")%>%mutate(minage = min(age_num)),
data_var = "dataFromR",
model_var = "model",
chains = 3,
cores = 3,
inference_opts = list(method = "MCMC", samples = 200, burn = 20, verbose = T)
)
prefPostPred <- pref_post%>%
spread(Parameter, value)
x_plot <- seq(0, 2, by = 0.1)
post_predictions <- sapply(1:length(prefPostPred$pref_int), function(idx) {
plogis(prefPostPred$pref_int[idx] + prefPostPred$pref_slope[idx] * x_plot)
})
colnames(post_predictions) <- 1:length(prefPostPred$pref_int)
plot_post_data <- as.data.frame(cbind(x_plot, post_predictions))
plot_post_data <- melt(plot_post_data, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
plot_post_data_mean <- plot_post_data%>%
group_by(x_plot)%>%
summarise(y_plot = mean(y_plot))
pref_post <- pref_post%>%
mutate(chain = factor(Chain))
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "grey", alpha = 0.2) +
geom_line(data = plot_post_data_mean, aes(x_plot, y_plot), col = "black") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="Prior in favor of preferred object")+
theme_few()
ggplot(plot_post_data_diff) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "grey", alpha = 0.2) +
geom_line(data = plot_post_data_diff_mean, aes(x_plot, y_plot), col = "black") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="Prior in favor of preferred object")+
ggtitle("Different Speaker")
pref_post_diff<- webppl(
program_code = paste(rsaUtils, rsaModel, postPrefWebppl , sep='\n'),
data = pref_data%>%filter(condition == "different_speaker")%>%mutate(minage = min(age_num)),
data_var = "dataFromR",
model_var = "model",
chains = 3,
cores = 3,
inference_opts = list(method = "MCMC", samples = 2000, burn = 200, verbose = T)
)
#saveRDS(pref_post, "../saves/pref_post")
prefPostPredDiff <- pref_post_diff%>%
spread(Parameter, value)
x_plot <- seq(0, 2, by = 0.1)
post_predictions_diff <- sapply(1:length(prefPostPredDiff$pref_int), function(idx) {
plogis(prefPostPredDiff$pref_int[idx] + prefPostPredDiff$pref_slope[idx] * x_plot)
})
colnames(post_predictions_diff) <- 1:length(prefPostPredDiff$pref_int)
plot_post_data_diff <- as.data.frame(cbind(x_plot, post_predictions_diff))
plot_post_data_diff <- melt(plot_post_data_diff, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
plot_post_data_diff_mean <- plot_post_data_diff%>%
group_by(x_plot)%>%
summarise(y_plot = mean(y_plot))
pref_post_diff <- pref_post_diff%>%
mutate(chain = factor(Chain))
saveRDS(pref_post_diff, "../saves/pref_post_diff")
prefPostPredDiff <- pref_post_diff%>%
spread(Parameter, value)
x_plot <- seq(0, 2, by = 0.1)
post_predictions_diff <- sapply(1:length(prefPostPredDiff$pref_int), function(idx) {
plogis(prefPostPredDiff$pref_int[idx] + prefPostPredDiff$pref_slope[idx] * x_plot)
})
colnames(post_predictions_diff) <- 1:length(prefPostPredDiff$pref_int)
plot_post_data_diff <- as.data.frame(cbind(x_plot, post_predictions_diff))
plot_post_data_diff <- melt(plot_post_data_diff, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
plot_post_data_diff_mean <- plot_post_data_diff%>%
group_by(x_plot)%>%
summarise(y_plot = mean(y_plot))
pref_post_diff <- pref_post_diff%>%
mutate(chain = factor(Chain))
ggplot(plot_post_data_diff) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "grey", alpha = 0.2) +
geom_line(data = plot_post_data_diff_mean, aes(x_plot, y_plot), col = "black") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="Prior in favor of preferred object")+
ggtitle("Different Speaker")+
theme_few()
ggplot(data = pref_post, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(~Parameter)+
ggtitle("Preference - Different Speaker")+
theme_few()
pref_post_same<- webppl(
program_code = paste(rsaUtils, rsaModel, postPrefWebppl , sep='\n'),
data = pref_data%>%filter(condition == "same_speaker")%>%mutate(minage = min(age_num)),
data_var = "dataFromR",
model_var = "model",
chains = 3,
cores = 3,
inference_opts = list(method = "MCMC", samples = 2000, burn = 200, verbose = T)
)
saveRDS(pref_post_same, "../saves/pref_post_same")
prefPostPredSame <- pref_post_same%>%
spread(Parameter, value)
x_plot <- seq(0, 2, by = 0.1)
post_predictions_same <- sapply(1:length(prefPostPredSame$pref_int), function(idx) {
plogis(prefPostPredSame$pref_int[idx] + prefPostPredSame$pref_slope[idx] * x_plot)
})
colnames(post_predictions_same) <- 1:length(prefPostPredSame$pref_int)
plot_post_data_same <- as.data.frame(cbind(x_plot, post_predictions_same))
plot_post_data_same <- melt(plot_post_data_same, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
plot_post_data_same_mean <- plot_post_data_same%>%
group_by(x_plot)%>%
summarise(y_plot = mean(y_plot))
pref_post_same <- pref_post_same%>%
mutate(chain = factor(Chain))
ggplot(plot_post_data_same) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "grey", alpha = 0.2) +
geom_line(data = plot_post_data_same_mean, aes(x_plot, y_plot), col = "black") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="Prior in favor of preferred object")+
ggtitle("Preference - Same Speaker")+
theme_few()
ggplot(data = pref_post_same, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(~Parameter)+
ggtitle("Preference - Different Speaker")+
theme_few()
ggplot(data = pref_post_diff, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(~Parameter)+
ggtitle("Preference - Different Speaker")+
theme_few()
plot_post_data <- bind_rows(
plot_post_data_same,
plot_post_data_diff
)
plot_post_data
prefPostPredSame <- pref_post_same%>%
spread(Parameter, value)
pref_post_same <- pref_post_same%>%
mutate(chain = factor(Chain))
x_plot <- seq(0, 2, by = 0.1)
post_predictions_same <- sapply(1:length(prefPostPredSame$pref_int), function(idx) {
plogis(prefPostPredSame$pref_int[idx] + prefPostPredSame$pref_slope[idx] * x_plot)
})
colnames(post_predictions_same) <- 1:length(prefPostPredSame$pref_int)
plot_post_data_same <- as.data.frame(cbind(x_plot, post_predictions_same))
plot_post_data_same <- melt(plot_post_data_same, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")%>%
mutate(condition = "same speaker")
# Different speaker
prefPostPredDiff <- pref_post_diff%>%
spread(Parameter, value)
pref_post_diff <- pref_post_diff%>%
mutate(chain = factor(Chain))
post_predictions_diff <- sapply(1:length(prefPostPredDiff$pref_int), function(idx) {
plogis(prefPostPredDiff$pref_int[idx] + prefPostPredDiff$pref_slope[idx] * x_plot)
})
colnames(post_predictions_diff) <- 1:length(prefPostPredDiff$pref_int)
plot_post_data_diff <- as.data.frame(cbind(x_plot, post_predictions_diff))
plot_post_data_diff <- melt(plot_post_data_diff, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")%>%
mutate(condition = "different speaker")
plot_post_data <- bind_rows(
plot_post_data_same,
plot_post_data_diff
)
plot_post_data
plot_post_data_mean <- plot_post_data%>%
group_by(condition,x_plot)%>%
summarise(y_plot = mean(y_plot))
ggplot(plot_post_data) +
geom_line(aes(x_plot, y_plot, group = iteration), col = "grey", alpha = 0.2) +
geom_line(data = plot_post_data_mean, aes(x_plot, y_plot), col = "black") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="Prior in favor of preferred object")+
facet_wrap(~condition)+
theme_few()
# Same Speaker
prefPostPredSame <- pref_post_same%>%
spread(Parameter, value)
pref_post_same <- pref_post_same%>%
mutate(chain = factor(Chain))%>%
mutate(condition = "same speaker")
x_plot <- seq(0, 2, by = 0.1)
post_predictions_same <- sapply(1:length(prefPostPredSame$pref_int), function(idx) {
plogis(prefPostPredSame$pref_int[idx] + prefPostPredSame$pref_slope[idx] * x_plot)
})
colnames(post_predictions_same) <- 1:length(prefPostPredSame$pref_int)
plot_post_data_same <- as.data.frame(cbind(x_plot, post_predictions_same))
plot_post_data_same <- melt(plot_post_data_same, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")%>%
mutate(condition = "same speaker")
# Different speaker
prefPostPredDiff <- pref_post_diff%>%
spread(Parameter, value)
pref_post_diff <- pref_post_diff%>%
mutate(chain = factor(Chain))%>%
mutate(condition = "different speaker")
post_predictions_diff <- sapply(1:length(prefPostPredDiff$pref_int), function(idx) {
plogis(prefPostPredDiff$pref_int[idx] + prefPostPredDiff$pref_slope[idx] * x_plot)
})
colnames(post_predictions_diff) <- 1:length(prefPostPredDiff$pref_int)
plot_post_data_diff <- as.data.frame(cbind(x_plot, post_predictions_diff))
plot_post_data_diff <- melt(plot_post_data_diff, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")%>%
mutate(condition = "different speaker")
# combining datasets
pref_post_diff <- bind_rows(
pref_post_diff,
pref_post_same
)
plot_post_data <- bind_rows(
plot_post_data_same,
plot_post_data_diff
)
plot_post_data_mean <- plot_post_data%>%
group_by(condition,x_plot)%>%
summarise(y_plot = mean(y_plot))
ggplot(data = pref_post, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(condition~Parameter)+
theme_few()
pref_post
pref_post <- bind_rows(
pref_post_diff,
pref_post_same
)
ggplot(data = pref_post, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(condition~Parameter)+
theme_few()
ggplot(data = pref_post, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_grid(condition~Parameter)+
theme_few()
ggplot(data = pref_post, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_grid(Parameter ~ condition)+
theme_few()
ggplot(data = postPred) +
geom_abline(aes(intercept = so_int, slope = so_slope, col = chain), alpha = 0.1)+
geom_abline(data = mean_so_post, aes(intercept = int, slope = slope), size = 1)+
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits=c(-2, 4), name="Speaker optimality")+
facet_wrap(~chain)+
theme_few()
pref_prior<- webppl(
program_code = paste(rsaUtils, rsaModel, priorPrefWebppl , sep='\n'),
data = pref_data%>%mutate(minage = min(age_num)),
data_var = "dataFromR",
model_var = "model",
chains = 1,
inference_opts = list(method = "forward", samples = 1000, verbose = T)
)
saveRDS(pref_prior, "../saves/pref_prior.rds")
prefPriorPred <- pref_prior%>%
spread(Parameter, value)
x_plot <- seq(0, 2, by = 0.1)
model_predictions <- sapply(1:length(prefPriorPred$pref_int), function(idx) {
plogis(prefPriorPred$pref_int[idx] + prefPriorPred$pref_slope[idx] * x_plot)
})
colnames(model_predictions) <- 1:length(prefPriorPred$pref_int)
plot_data <- as.data.frame(cbind(x_plot, model_predictions))
plot_data_melted <- melt(plot_data, id.vars = "x_plot", variable.name = "iteration",
value.name = "y_plot")
pref_prior <- pref_prior%>%
mutate(chain = factor(Chain))
ggplot(plot_data_melted) +
geom_line(aes(x_plot, y_plot, group = iteration), alpha = 0.3) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P chosing preferred object")+
theme_few()
ggplot(data = pref_prior, aes(x = value, fill = chain)) +
geom_density(alpha = 0.3)+
facet_wrap(~Parameter)+
theme_few()
ggplot(plot_data_melted) +
geom_line(aes(x_plot, y_plot, group = iteration), alpha = 0.3) +
xlab("age") + ylab("p(y | x)") +
scale_x_continuous(limits=c(0,2), name="age", breaks = c(0:2), labels = c(3:5)) +
scale_y_continuous(limits = c(0, 1), name="P in favor of preferred object")+
theme_few()
saveRDS(pref_post_same, "../saves/pref_post_same.rds")
saveRDS(pref_post_diff, "../saves/pref_post_diff.rds")
