library(langcog)
library(rwebppl)
library(matrixStats)
library(coda)
library(ggpubr)
library(lme4)
library(broom)
library(exactRankTests)
# data ex 1 and ex 2
d1 <- bind_rows(read_csv(file="../../stats/data/novel.data.csv"),
read_csv(file="../../stats/data/pref.data.csv")) %>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
control = ifelse(change == "true", "true" , "false"))
d2 <- read_csv(file="../../stats/data/inf.data.csv") %>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))
dex12 <- bind_rows(d1,d2) %>%
filter(trial_type == "test")%>%
mutate(control= relevel(factor(control), ref = "true"),
choiceAgent = ifelse( control == "false", agent, altAgent)) # re-code agent for preference and novelty
# data ex 3
d3 <- bind_rows(read_csv(file="../../stats/data/ex3.novel.data.csv"),
read_csv(file="../../stats/data/ex3.pref.data.csv")) %>%
mutate(trial_type = ifelse(trial == "train1" | trial =="train2", "train", "test"))
# check if someone did both experiments
# yes, two people
x <- d3 %>%
filter(trial_type == "train")%>%
group_by(id)%>%
summarise(n = length(correct_inf)) %>%
filter(n > 2)
# exclude those who did both experiments
dex3 <- d3 %>%
filter(!id %in% x$id) %>%
mutate(Speaker = ifelse(change =="same", "Same speaker", "Different speaker"),
Alignment = ifelse(alignment == "congruent", "Congruent", "Incongruent"),
Prior = ifelse(experiment == "pref_inf", "Preference", "Novelty"),
choiceAgent = ifelse (change == "same", agent, altAgent))%>%
filter(trial_type == "test")
d4 <- bind_rows(read_csv(file="../../stats/data/ex3.2.novel.strong.data.csv"),
read_csv(file="../../stats/data/ex3.2.novel.medium.data.csv"),
read_csv(file="../../stats/data/ex3.2.novel.weak.data.csv"),
read_csv(file="../../stats/data/ex3.2.pref.strong.data.csv"),
read_csv(file="../../stats/data/ex3.2.pref.medium.data.csv")
) %>%
mutate(trial_type = ifelse(trial == "train1" | trial =="train2", "train", "test"))
x <- d4 %>%
filter(trial_type == "train") %>%
group_by(id)%>%
summarise(correct_inf = mean(correct_inf)) %>%
filter(correct_inf == 0)
dex4 <- d4 %>%
filter(!id %in% x$id)%>%
distinct(id, alltrial, .keep_all = TRUE) %>%
filter(trial_type != "train") %>%
mutate(Change = ifelse(change =="same", "Same speaker", "Different speaker"),
Alignment = ifelse(alignment == "congruent", "Congruent", "Incongruent"),
Experiment = ifelse(grepl("pref",experiment), "Preference", "Novelty"),
Prior = ifelse(prior == "weak", "Weak", ifelse(prior == "medium", "Medium", "Strong"))
)
# loading model comparisons and predictions
pred_ex3 <- readRDS(file = "../../stats/saves/model_predictions_ex3_1.rds")
pred_ex4 <- readRDS(file = "../../stats/saves/model_predictions_ex3_variable_priors.rds")
bf_ex3 <- readRDS(file = "../../stats/saves/ex3_bf.rds")
bf_ex4 <- readRDS(file = "../../stats/saves/ex4_bf.rds")
ex1t <- dex12 %>%
filter(condition == "informativeness")%>%
group_by(control, id) %>%
summarise(correct = mean(correct)) %>%
summarise(correct = list(correct)) %>%
group_by(control) %>%
mutate(df= t.test(unlist(correct), mu = 0.5)$parameter,
t_value = t.test(unlist(correct), mu = 0.5)$statistic,
p_value = t.test(unlist(correct), mu = 0.5)$p.value) %>%
select(control,df,t_value,p_value)%>%
mutate(p_value = ifelse(p_value<.001,"< .001",as.character(paste("=",substr(round(p_value,3),2,5),sep=" "))),
t_value = round(t_value,2))
# model
lm_ex1 <- glmer(correct ~ control +
(control |id) + (control |agent),
data = dex12%>%filter(condition == "informativeness"),
family = binomial,control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
ex1_r <- tidy(lm_ex1, effects = "fixed")%>%
mutate(p.value = ifelse(p.value<.001,"< .001",as.character(paste("=",substr(round(p.value,3),2,5),sep=" "))),
std.error = round(std.error,2),
estimate = round(estimate,2))
ex1t
ex1_r <- tidy(lm_ex1, effects = "fixed")
ex1_r
ex1t
pc1 <- pred_ex3%>%
filter(Model == "Noisy RSA Model")%>%
mutate(Prior = "Strong")
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
pc1 <- pred_ex3%>%
filter(Model == "Noisy RSA Model")%>%
mutate(Prior = "Strong")
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
pc2 <- pred_ex4%>%
filter(Model == "Noisy RSA Model")
c2 <- ggplot(data = pc2,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5 )+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
scale_colour_manual(values = rev(viridis::viridis(3)))
pc3 <- data.frame(
ex3 = pc1%>%pull(Data),
ex3_ci_l = pc1%>%pull(Data_ci_low),
ex3_ci_u = pc1%>%pull(Data_ci_up),
ex4 = pc2%>%filter(Prior == "Strong")%>%pull(Data),
ex4_ci_l = pc2%>%filter(Prior == "Strong")%>%pull(Data_ci_low),
ex4_ci_u = pc2%>%filter(Prior == "Strong")%>%pull(Data_ci_up),
Prior = "Strong")
c3 <- ggplot(data = pc3,aes(x = ex3, y = ex4, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = ex4_ci_l, ymax = ex4_ci_u),width = 0,size = .5 )+
geom_errorbarh(aes(xmin = ex3_ci_l, xmax = ex3_ci_u), height = 0,size = .5)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Data Experiment 3")+
ylab("Data Experiment 4")+
theme_few(base_size = 10)+
scale_color_viridis_d()
ggarrange(c1, c2, c3, ncol = 3, nrow = 1, legend = "right", common.legend = T , labels = c("A","B","C"), vjust = 1)
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9, aes(x = Model, y = Data), inherit.aes = F)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
c1
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9,inherit.aes = F)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
c1
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9, aes(x = mean, y = Data), inherit.aes = F)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
c1
?stat_cor
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9, aes(x = mean, y = Data))+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
c1
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9, aes(x = mean, y = Data), inherit.aes = F, size = 5)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
c1
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9, aes(x = mean, y = Data), inherit.aes = F, size = 1)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
c1
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9, aes(x = mean, y = Data), inherit.aes = F, size = 3)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
c1
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.01, label.y = 0.99, aes(x = mean, y = Data), inherit.aes = F, size = 3)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
c1
pc1 <- pred_ex3%>%
filter(Model == "Noisy RSA Model")%>%
mutate(Prior = "Strong")
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.01, label.y = 0.99, aes(x = mean, y = Data), inherit.aes = F, size = 3)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
pc2 <- pred_ex4%>%
filter(Model == "Noisy RSA Model")
c2 <- ggplot(data = pc2,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5 )+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.01, label.y = 0.99, aes(x = mean, y = Data), inherit.aes = F, size = 3)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
scale_colour_manual(values = rev(viridis::viridis(3)))
pc3 <- data.frame(
ex3 = pc1%>%pull(Data),
ex3_ci_l = pc1%>%pull(Data_ci_low),
ex3_ci_u = pc1%>%pull(Data_ci_up),
ex4 = pc2%>%filter(Prior == "Strong")%>%pull(Data),
ex4_ci_l = pc2%>%filter(Prior == "Strong")%>%pull(Data_ci_low),
ex4_ci_u = pc2%>%filter(Prior == "Strong")%>%pull(Data_ci_up),
Prior = "Strong")
c3 <- ggplot(data = pc3,aes(x = ex3, y = ex4, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = ex4_ci_l, ymax = ex4_ci_u),width = 0,size = .5 )+
geom_errorbarh(aes(xmin = ex3_ci_l, xmax = ex3_ci_u), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.01, label.y = 0.99, aes(x = mean, y = Data), inherit.aes = F, size = 3)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Data Experiment 3")+
ylab("Data Experiment 4")+
theme_few(base_size = 10)+
scale_color_viridis_d()
ggarrange(c1, c2, c3, ncol = 3, nrow = 1, legend = "right", common.legend = T , labels = c("A","B","C"), vjust = 1)
pc1 <- pred_ex3%>%
filter(Model == "Noisy RSA Model")%>%
mutate(Prior = "Strong")
c1 <-ggplot(data = pc1,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5)+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.01, label.y = 0.99, aes(x = mean, y = Data), inherit.aes = F, size = 3)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
guides(col = F)+
scale_colour_viridis_d()
pc2 <- pred_ex4%>%
filter(Model == "Noisy RSA Model")
c2 <- ggplot(data = pc2,aes(x = mean, y = Data, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = Data_ci_low, ymax = Data_ci_up),width = 0,size = .5 )+
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.01, label.y = 0.99, aes(x = mean, y = Data), inherit.aes = F, size = 3)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Model")+
theme_few(base_size = 10) +
scale_colour_manual(values = rev(viridis::viridis(3)))
pc3 <- data.frame(
ex3 = pc1%>%pull(Data),
ex3_ci_l = pc1%>%pull(Data_ci_low),
ex3_ci_u = pc1%>%pull(Data_ci_up),
ex4 = pc2%>%filter(Prior == "Strong")%>%pull(Data),
ex4_ci_l = pc2%>%filter(Prior == "Strong")%>%pull(Data_ci_low),
ex4_ci_u = pc2%>%filter(Prior == "Strong")%>%pull(Data_ci_up),
Prior = "Strong")
c3 <- ggplot(data = pc3,aes(x = ex3, y = ex4, col = Prior)) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 1, size = .5)+
geom_point(size = 2)+
geom_errorbar(aes(ymin = ex4_ci_l, ymax = ex4_ci_u),width = 0,size = .5 )+
geom_errorbarh(aes(xmin = ex3_ci_l, xmax = ex3_ci_u), height = 0,size = .5)+
stat_cor(method = "pearson", label.x = 0.01, label.y = 0.99, aes(x = ex3, y = ex4), inherit.aes = F, size = 3)+
coord_fixed()+
xlim(0,1)+ylim(0,1)+
xlab("Data Experiment 3")+
ylab("Data Experiment 4")+
theme_few(base_size = 10)+
scale_color_viridis_d()
ggarrange(c1, c2, c3, ncol = 3, nrow = 1, legend = "right", common.legend = T , labels = c("A","B","C"), vjust = 1)
p1 <- dex12 %>%
filter(trial_type == "test") %>%
mutate(control = ifelse(control == "true", "Control", "Test"),
condition = factor(condition),
experiment = ifelse(condition == "informativeness", "1","2"))%>%
group_by(experiment,condition ,control, id) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control), alpha = 0.2, width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper),size = .5)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Expected Choice")+
facet_wrap( ~ condition, labeller = as_labeller(c(`preference`="Exp. 2 - Pref.", `novelty`="Exp. 2 - Nov.", `informativeness`="Exp. 1 - Inf.")))+
theme_few(base_size = 10) +
ylim(-0.05,1.05)+
guides(alpha = F,size =F, col = F)+
scale_color_manual(name = "Condition",
breaks=c("Test","Control"),
values= c("#839496","black"))
d_new <- read_csv(file="../data/kids_novel.data.csv")%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))
d_old <- read_csv(file="../data/kids_novel.data.round1.csv")%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))
# check if someone needs to be excluded because wrong in training
# no one
d_new %>%
filter(trial_type == "train") %>%
group_by(subid)%>%
summarise(correct = mean(correct)) %>%
filter(correct == 0)
d_old %>%
filter(trial_type == "train") %>%
group_by(subid)%>%
summarise(correct = mean(correct)) %>%
filter(correct == 0)
d <- bind_rows(d_new,d_old)
## sanity checks
d %>%
group_by(condition,trial_type) %>%
summarise(n = length(unique(subid)),
correct = mean(correct)) %>%
knitr::kable(digits = 2)
d %>%
group_by(condition,age)%>%
summarise(n = length(unique(subid)),
age_num = mean(age_num))%>%
knitr::kable(digits = 2)
p3 <- d %>%
filter(trial_type == "test") %>%
group_by(condition,change, subid) %>%
summarise(correct = mean(correct))
p4 <- p3 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p3, aes(x = change, y = correct, col = change, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p4, aes(x = change, y = mean, col = change, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(condition ~.)+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p1 <- d %>%
filter(trial_type == "test") %>%
group_by(condition,change,age, subid) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = change, y = correct, col = change, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = change, y = mean, col = change, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_wrap(condition~age)+
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
p5 <- d %>%
filter(trial_type == "test") %>%
group_by(condition,change,age_num, subid) %>%
summarise(correct = mean(correct))
ggplot(data = p5, aes(x = age_num, y = correct, col = change)) +
geom_smooth(method = "loess", se = T)+
geom_jitter( alpha = .5, height = 0.04)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
facet_grid(condition ~.)+
ylim(-0.05,1.05)+
guides(alpha = F)+
#theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Speaker Change",
breaks=c("false", "true"),
labels=c("No", "Yes"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(ggthemes)
library(langcog)
library(rwebppl)
library(matrixStats)
library(coda)
library(ggpubr)
estimate_mode <- function(s) {
d <- density(s)
return(d$x[which.max(d$y)])
}
hdi_upper<- function(s){
m <- HPDinterval(mcmc(s))
return(m["var1","upper"])
}
hdi_lower<- function(s){
m <- HPDinterval(mcmc(s))
return(m["var1","lower"])
}
dat <- bind_rows(read_csv(file="ex3.2.novel.strong.data.csv"),
read_csv(file="ex3.2.novel.medium.data.csv"),
read_csv(file="ex3.2.novel.weak.data.csv"),
read_csv(file="ex3.2.pref.strong.data.csv"),
read_csv(file="ex3.2.pref.medium.data.csv")
) %>%
mutate(trial_type = ifelse(trial == "train1" | trial =="train2", "train", "test"))
load("../saves/mcc_model_comparison.RData")
vp.llh.rsa.noise
pred.ex3
knitr::opts_chunk$set(echo = TRUE)
load("model.predictions.RData")
load("model.comparisons.RData")
load("../saves/model.comparisons.RData")
getwd()
load("/saves/model.comparisons.RData")
load("/saves/mcc_model_comparison.RData")
load("../saves/mcc_model_comparison.RData")
bda.pred.noise
## distribution of noise
posterior.noise.pred <- bda.pred.noise %>%
filter(Parameter %in% c("noise", "priorExponent"))
ggplot(posterior.noise.pred, aes(x = value))+
geom_histogram()+
facet_wrap(~Parameter, scales = 'free')
noisy.rsa.params.pred <- bda.pred.noise %>%
filter(Parameter %in% c("noise", "priorExponent"))  %>%
group_by(Parameter) %>%
summarise(mean = estimate_mode(value), ci_lower = hdi_lower(value), ci_upper = hdi_upper(value))
noisy.rsa.params.pred
posterior.noise1
posterior.noise
posterior.noise %>%
group_by(Parameter) %>%
summarise(mean = estimate_mode(value), ci_lower = hdi_lower(value), ci_upper = hdi_upper(value))
